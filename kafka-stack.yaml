apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  
  selector:
    matchLabels:
      app: kafka
  
  template:
    metadata:
      name: kafka
      labels: 
        app: kafka
    spec:
      containers:
        - name: kafka
          image: docker.io/bitnami/kafka:3.2
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092, PLAINTEXT_HOST://:29092"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://localhost:9092, PLAINTEXT_HOST://kafka:29092"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
          volumeMounts:
            - name: volume-kafka
              mountPath: /bitnami/kafka
      initContainers:
        - name: take-data-dir-ownership
          image: alpine:3
          command: ["sh","-c","mkdir -p /data && chown -R 1001:1001 /data"]
          volumeMounts:
          - name: volume-kafka
            mountPath: /data
      volumes:
        - name: volume-kafka
          persistentVolumeClaim:
            claimName: volume-kafka

---

apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  ports:
    - name: tcp-1
      protocol: TCP
      port: 9092
    - name: udp-1
      protocol: UDP
      port: 9092
    - name: tcp-2
      protocol: TCP
      port: 29092
    - name: udp-2
      protocol: UDP
      port: 29092
  selector:
    app: kafka
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  
  selector:
    matchLabels:
      app: zookeeper
  
  template:
    metadata:
      name: zookeeper
      labels: 
        app: zookeeper

    spec:
      initContainers:
        - name: take-data-dir-ownership
          image: alpine:3
          command: ["sh","-c","mkdir -p /data && chown -R 1001:1001 /data"]
          volumeMounts:
          - name: volume-zookeeper
            mountPath: /data
      containers:
        - name: zookeeper
          image: docker.io/bitnami/zookeeper:3.8
          env: 
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
          volumeMounts:
            - name: volume-zookeeper
              mountPath: /bitnami/zookeeper
      volumes:
        - name: volume-zookeeper
          persistentVolumeClaim:
            claimName: volume-zookeeper

---

apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  ports:
    - port: 2181
  selector:
    app: zookeeper
  type: ClusterIP
